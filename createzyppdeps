#!/usr/bin/perl -w

################################################################
#
# Copyright (c) 1995-2014 SUSE Linux Products GmbH
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 or 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program (see the file COPYING); if not, write to the
# Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
#
################################################################

BEGIN {
  unshift @INC, ($::ENV{'BUILD_DIR'} || '/usr/lib/build');
}

use strict;

use Build::Zypp;
use Getopt::Long;

Getopt::Long::Configure("no_ignore_case");

my $cachedir = "/var/cache/build";
my $opt_listrepos;

GetOptions(
    "cachedir=s"  => \$cachedir,
    "listrepos" => \$opt_listrepos,
    ) or exit(1);

if ($opt_listrepos) {
  die("createzyppdeps --listrepos does not take an argument\n") if @ARGV;
  for my $r (Build::Zypp::parseallrepos()) {
    print "$r->{'name'}\n" if $r->{'enabled'};
  }
  exit 0;
}
die("createzyppdeps needs exactly one argument\n") if @ARGV != 1;
my $url = $ARGV[0];

die("createzyppdeps argument must start with 'zypp://'\n") unless $url =~ /^zypp:\/\/([^\/]*)/;
my $repo = Build::Zypp::parserepo($1);

my $type = $repo->{'type'};
my $zyppcachedir = "/var/cache/zypp/raw/$repo->{'name'}";

if($type eq 'rpm-md') {
  exec ("$INC[0]/createrepomddeps", '--cachedir', $cachedir, '--zypp', $zyppcachedir, $url);
} elsif ($type eq 'yast2') {
  exec ("$INC[0]/createyastdeps", '--cachedir', $cachedir, '--zypp', $zyppcachedir, $url);
} else {
  die "unsupported repo type: $type\n";
}
